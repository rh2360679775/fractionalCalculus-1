#include <iostream>
#include <iomanip> // for setprecision
#include <chrono>
#include <cmath>


// order of the polynom = 20
// precision achieved e-16
using FloatType = double;
const int prec = 16;
using namespace std;


// lAncos c10 
	const 	double c10[11] = {
 +2.48574089138753565546E-5,
 +1.05142378581721974210E0,
 -3.45687097222016235469E0,
 +4.51227709466894823700E0,
 -2.98285225323576655721E0,
 +1.05639711577126713077E0,
 -1.95428773191645869583E-1,
 +1.70970543404441224307E-2,
 -5.71926117404305781283E-4,
 +4.63399473359905636708E-6,
 -2.71994908488607703910E-9};
 double r10 = 1.0900511E1;
 

	const 	double as[6] = {
 0.0074328664452696830778823766731399907478909043505810713475,
 0.7068046332733135112975284175201300337640024723570881871134,
-0.8536081697736647364788270850100070246185316148079072186181,
 0.2642657682115956750407787381056907135593371926598243754153,
-0.0173295331533392839153678092520585434846289631167053707785,
 0.0000499520596977551307885434004232449284795066493485021148
	};
 double r = 5.2E0;

const double m_pi = 3.1415926535897932384626433832795;
const double m_e = 2.7182818284590452353602874713527;
const double factorLan = 2.0E0 * sqrt(m_e / m_pi);
// 2 Sqrt[(E/Pi)] ((z+r10 + 1/2)/E)^(z+1/2) (c10[[1]] + Sum[c10[[k]]/(z+k-1),{k,2,11}])

inline double ghGamma(double x)
{

		double sum = as[0];

		for(int i = 1; i < 6; i++){
			sum += as[i]/(x+i);
		}

		return sum*(factorLan * pow((x + r + 0.5E0) / m_e, x + 0.5E0));
}


#include "trapez.hpp"
