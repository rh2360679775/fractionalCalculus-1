// c++20 version
#include <array>
#include <string>

// intended data type 
using FloatType = long double;

// precision achieved e-16
const int prec = 32;

// id 
const std::string name = "seriesLongDouble30"; 

// order k of the polynomial => array-size = k+1 = 30
const std::array<FloatType, 30> as = {
	1.0E0L, 
	-5.772156649015328605867504180524819743117047335253698707946215782E-1L, 
	9.890559953279725480567736016011074551731970227871841326147670037E-1L, 
	-9.074790760808853204034041123531852470048241450183333319688654403E-1L, 
	9.817280868343342993508170961593701086734340526645559305830260364E-1L, 
	-9.819950689004158144339628200322199063804287933962962701660364352E-1L, 
	9.931491145454546596782858789496350328652763778299599764441614315E-1L, 
	-9.960017589382732748089175162811376314697147473176727548253925349E-1L, 
	9.981056715129189680990573784917422247740403929981223999668834399E-1L, 
	-9.990250134118399800372439103878567997541294491709751397892570239E-1L, 
	9.995133628162019845482052880889581723670991136329077245238140199E-1L, 
	-9.997399284276842800847569140354098696960804838510334107125689736E-1L, 
	9.997791255148989102928786523422115508693106406801813139004551520E-1L, 
	-9.994504397726759377378756316403384848980389881027808702884505848E-1L, 
	9.979535245458726816208470913414942086863398570568581090328391650E-1L, 
	-9.929609973542025129822480482007778526218927585141017688579208531E-1L, 
	9.791739016563532773539533100165369613035793704671064296668045075E-1L, 
	-9.471479549842206850430750762894205529764109064566593394834907327E-1L, 
	8.843618782148606539970266389247349247667405257184289291251064020E-1L, 
	-7.804429582293780035462100559354943723915093847420921135949438237E-1L, 
	6.354645773560346047205100084882105703634791106498237509281422778E-1L, 
	-4.655773241310680445401866356009338719839776846509169710182875371E-1L, 
	2.993245854990955480240411051361101341114304008683617635575278364E-1L, 
	-1.646081873675282259931192131477486890184996839736595319623786902E-1L, 
	7.531660607553232952371244924139683428299053155028415770684736347E-2L, 
	-2.774103935426569153750679132953790742164427656251619171270142394E-2L, 
	7.871475255988880238358932061028742971085369173140485201668656701E-3L, 
	-1.610055659291006362895556315972035309013456479231051353987482957E-3L, 
	2.108086307668984701877376536205400787900905232817074763827402896E-4, 
	-1.324627302460587650246889364226604892336483855819419952292E-5L};


